name: Deploy Fullstack App (Frontend + Backend)

on:
  push:
    branches: [ main ]

env:
  DOCKER_HUB_USERNAME: tjdusdl
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

  FRONTEND_IMAGE: tjdusdl/react-app
  BACKEND_IMAGE: tjdusdl/backend-app

  EC2_HOST: ${{ secrets.HOST }}
  EC2_USERNAME: ${{ secrets.USERNAME }}
  EC2_KEY: ${{ secrets.KEY }}
  PORT: ${{ secrets.PORT }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      # === Build & Push Frontend ===
      - name: Build & Push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: tjdusdl/react-app:latest

      # === Build & Push Backend ===
      - name: Build & Push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: tjdusdl/backend-app:latest

      # === Deploy to EC2 ===
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_KEY }}
          port: ${{ env.PORT }}
          script: |
            echo "==== Pull latest Docker images ===="
            docker pull tjdusdl/react-app:latest
            docker pull tjdusdl/backend-app:latest

            echo "==== Stop & Remove old containers ===="
            docker stop frontend || true
            docker rm frontend || true
            docker stop backend || true
            docker rm backend || true

            echo "==== Run new containers ===="
            docker run -d --restart always --name frontend -p 80:80 tjdusdl/react-app:latest
            docker run -d --restart always --name backend -p 3000:3000 tjdusdl/backend-app:latest

            echo "==== Cleanup old images ===="
            docker image prune -f
